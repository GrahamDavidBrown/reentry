# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2017-05-05 16:04
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Connection',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=50)),
                ('state', models.CharField(max_length=2)),
            ],
        ),
        migrations.CreateModel(
            name='Needs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('need', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Provided_Needs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('need_string', models.CharField(max_length=25, null=True)),
                ('need', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='secondchances.Needs')),
            ],
        ),
        migrations.CreateModel(
            name='Provided_Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_string', models.CharField(max_length=25, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Required_Skill',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill_string', models.CharField(max_length=25, null=True)),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='secondchances.Job')),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('created', models.DateTimeField(auto_now=True)),
                ('location', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='secondchances.Location')),
            ],
        ),
        migrations.CreateModel(
            name='Skills',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skill', models.CharField(max_length=30, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='User_Location',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('location_string', models.CharField(max_length=54, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='secondchances.Location')),
            ],
        ),
        migrations.CreateModel(
            name='User_Needs',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('need_string', models.CharField(max_length=25, null=True)),
                ('need', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='secondchances.Needs')),
            ],
        ),
        migrations.CreateModel(
            name='User_Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('firstname', models.CharField(blank=True, max_length=30, null=True)),
                ('lastname', models.CharField(blank=True, max_length=30, null=True)),
                ('emailaddress', models.CharField(blank=True, max_length=50, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('created', models.DateTimeField(auto_now=True)),
                ('last_login', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.AddField(
            model_name='user_needs',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='secondchances.User_Profile'),
        ),
        migrations.AddField(
            model_name='user_location',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='secondchances.User_Profile'),
        ),
        migrations.AddField(
            model_name='service',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='secondchances.User_Profile'),
        ),
        migrations.AddField(
            model_name='required_skill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='secondchances.Skills'),
        ),
        migrations.AddField(
            model_name='provided_skill',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='secondchances.User_Profile'),
        ),
        migrations.AddField(
            model_name='provided_skill',
            name='skill',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='secondchances.Skills'),
        ),
        migrations.AddField(
            model_name='provided_needs',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='secondchances.Service'),
        ),
        migrations.AlterUniqueTogether(
            name='location',
            unique_together=set([('city', 'state')]),
        ),
        migrations.AddField(
            model_name='job',
            name='location',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='secondchances.Location'),
        ),
        migrations.AddField(
            model_name='job',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='secondchances.User_Profile'),
        ),
        migrations.AddField(
            model_name='connection',
            name='user_1',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Connection_user_1', to='secondchances.User_Profile'),
        ),
        migrations.AddField(
            model_name='connection',
            name='user_2',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Connection_user_2', to='secondchances.User_Profile'),
        ),
        migrations.AlterUniqueTogether(
            name='user_location',
            unique_together=set([('owner', 'location')]),
        ),
        migrations.AlterUniqueTogether(
            name='required_skill',
            unique_together=set([('owner', 'skill')]),
        ),
        migrations.AlterUniqueTogether(
            name='provided_skill',
            unique_together=set([('owner', 'skill')]),
        ),
        migrations.AlterUniqueTogether(
            name='provided_needs',
            unique_together=set([('owner', 'need')]),
        ),
    ]
